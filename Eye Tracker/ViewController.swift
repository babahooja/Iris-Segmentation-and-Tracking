//
//  ViewController.swift
//  AV Foundation
//
//  Created by Himanshu Ahuja on 5/17/18.
//  Copyright Â© 2017 Himanshu Ahuja. All rights reserved.
//

import UIKit
import Photos

class ViewController: UIViewController {
	let videoController = VideoController()
	
    @IBOutlet fileprivate var captureButton: UIButton!
    
    ///Displays a preview of the video output generated by the device's cameras.
    @IBOutlet fileprivate var capturePreviewView: UIView!
    
    ///Allows the user to put the camera in photo mode.
    @IBOutlet fileprivate var photoModeButton: UIButton!
    @IBOutlet fileprivate var toggleCameraButton: UIButton!
    @IBOutlet fileprivate var toggleFlashButton: UIButton!
    
    ///Allows the user to put the camera in video mode.
    @IBOutlet fileprivate var videoModeButton: UIButton!
	
	@IBAction func toggleFlash(_ sender: UIButton) {
		if videoController.flashMode == .on {
			videoController.flashMode = .off
			toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash Off Icon"), for: .normal)
		}
		else{
			videoController.flashMode = .on
			toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash On Icon"), for: .normal)
		}
	}
	
	@IBAction func switchCameras(_ sender: UIButton){
		do {
			try videoController.switchCameras()
		}
		catch{
			print(error)
		}
		switch videoController.currentCameraPosition{
		case .some(.front):
			toggleCameraButton.setImage(#imageLiteral(resourceName: "Front Camera Icon"), for: .normal)
		case .some(.rear):
			toggleCameraButton.setImage(#imageLiteral(resourceName: "Rear Camera Icon"), for: .normal)
		case .none:
			return
		}
	}
	
	
	@IBAction func captureImage(_ sender: UIButton) {
		videoController.captureImage {(image, error) in
			guard let image = image else {
				print(error ?? "Image capture error")
				return
			}
			
			try? PHPhotoLibrary.shared().performChangesAndWait {
				PHAssetChangeRequest.creationRequestForAsset(from: image)
			}
		}
	}
	
	@IBAction func unwindToCamera(segue:UIStoryboardSegue) {
		
	}
	
	@IBAction func capture(sender: AnyObject) {
	}
	
	
//	@IBAction func switchCameraModes(_ sender: UIButton) {
//		do {
//			try videoController.switchCameraMode()
//		}
//		catch{
//			print(error)
//		}
//		switch videoController.currentCameraPosition{
//		case .some(.videoMode):
//			toggleCameraButton.setImage(#imageLiteral(resourceName: "Photo Camera Icon"), for: .normal)
//		case .some(.photoMode):
//			toggleCameraButton.setImage(#imageLiteral(resourceName: "Video Camera Icon"), for: .normal)
//		case .none:
//			return
//		}
//	}
//	
    override var prefersStatusBarHidden: Bool { return true }
}

extension ViewController {
    override func viewDidLoad() {
		func configureVideoController() {
			videoController.prepare {(error) in
				if let error = error {
					print(error)
				}
				
				try? self.videoController.displayPreview(on: self.capturePreviewView)
			}
		}
		
        func styleCaptureButton() {
            captureButton.layer.borderColor = UIColor.black.cgColor
            captureButton.layer.borderWidth = 2
            
            captureButton.layer.cornerRadius = min(captureButton.frame.width, captureButton.frame.height) / 2
        }
        styleCaptureButton()
		configureVideoController()

    }
}

